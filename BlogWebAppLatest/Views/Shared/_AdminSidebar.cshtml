@using BlogWebApp.Models.IdentityModel
@using Microsoft.AspNetCore.Identity

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
<!-- ======= Sidebar ======= -->

<aside id="sidebar" class="sidebar">

    <ul class="sidebar-nav" id="sidebar-nav">

        <li class="nav-item">
            <a class="nav-link " href="/dashboard">
                <i class="bi bi-grid"></i>
                <span>Dashboard</span>
            </a>
        </li><!-- End Dashboard Nav -->

        <li class="nav-item">
            <a class="nav-link collapsed" data-bs-target="#blogs-nav" data-bs-toggle="collapse" href="#">
                <i class="bi bi-menu-button-wide"></i><span>Blogs</span><i class="bi bi-chevron-down ms-auto"></i>
            </a>
            <ul id="blogs-nav" class="nav-content collapse " data-bs-parent="#sidebar-nav">
                <li>
                    <a href="/addblog">
                        <i class="bi bi-circle"></i><span>Add Blog</span>
                    </a>
                </li>
                <li>
                    <a href="/manageblog">
                        <i class="bi bi-circle"></i><span>Manage Blogs</span>
                    </a>
                </li>
               
         
            </ul>
        </li><!-- End Components Nav -->

        <li class="nav-item">
            <a class="nav-link collapsed" data-bs-target="#logs-nav" data-bs-toggle="collapse" href="#">
                <i class="bi bi-substack"></i> <span>Blog Logs</span><i class="bi bi-chevron-down ms-auto"></i>
            </a>
            <ul id="logs-nav" class="nav-content collapse " data-bs-parent="#sidebar-nav">
                <li>
                    <a href="/File/GetUserLog">
                        <i class="bi bi-circle"></i><span>Log Files</span>
                    </a>
                </li>

            </ul>
        </li><!-- End Components Nav -->

      
        @if (SignInManager.IsSignedIn(User))
        {
            var user = await UserManager.GetUserAsync(User);
            var role = await UserManager.GetRolesAsync(user);
            if (@role.FirstOrDefault() == "Admin")
            {
                <li class="nav-item">
                    <a class="nav-link collapsed" data-bs-target="#category-nav" data-bs-toggle="collapse" href="#">
                        <i class="bi bi-bookmarks"></i><span>  Blog Category </span><i class="bi bi-chevron-down ms-auto"></i>
                    </a>
                    <ul id="category-nav" class="nav-content collapse " data-bs-parent="#sidebar-nav">
                        <li>
                            <a href="/BlogCategory/Create">
                                <i class="bi bi-circle"></i><span>Add Category</span>
                            </a>
                        </li>
                        <li>
                            <a href="/category">
                                <i class="bi bi-circle"></i><span>Manage Category</span>
                            </a>
                        </li>


                    </ul>
                </li>
            <li class="nav-item">
            <a class="nav-link collapsed" data-bs-target="#admin-nav" data-bs-toggle="collapse" href="#">
                 <i class="bi bi-people"></i><span>Admin</span><i class="bi bi-chevron-down ms-auto"></i>
            </a>
            <ul id="admin-nav" class="nav-content collapse " data-bs-parent="#sidebar-nav">
                <li>
                    <a href="/addadmin">
                        <i class="bi bi-circle"></i><span>Add Admin</span>
                    </a>
                </li>
                <li>
                    <a href="/manageadmin">
                        <i class="bi bi-circle"></i><span>Manage Admins </span>
                    </a>
                </li>


            </ul>
        </li>
            }

        }

    </ul>

</aside><!-- End Sidebar-->
