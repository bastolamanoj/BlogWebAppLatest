
@using BlogWebApp.ViewModel
@using X.PagedList.Mvc.Core;
@model X.PagedList.IPagedList<BlogVM>
@{
    TempData["Title"] = "Blog";
}

<!-- ======= Blog Section ======= -->
<section id="blog" class="blog pt-2">
    <div class="container" data-aos="fade-up">
        <div class="row row-reverse">
            <div class="col-xl-7 col-md-5 mb-3"></div>
            <div class="col-xl-5  row  col-md-5 mb-3">
                <label class="col-sm-3 col-form-label">Sort By</label>
                <div class="col-sm-9">
                    <select class="form-select sortblog" aria-label="Default select example">
                        @* <option selected>Sort By</option> *@
                        <option value="random_desc" selected>Randomly</option>
                        <option value="Popularity"> Popularity</option>
                        <option value="Recency"> Recency </option>
                    </select>
                </div>
            </div>
        </div>

        <div class="row gy-4 posts-list mb-5">

            @foreach (var item in Model)
            {
                <div class="col-xl-4 col-md-6">
                    <article>
                         <div class="post-img">
                            @if (item.BlogImages != null && item.BlogImages.Count > 0)
                            {
                                <img src="/Uploads/@item.BlogImages[0].Url" alt="" class="img-fluid">
                            }
                            else
                            {
                                <img src="/Uploads/default-image.jpg" alt="Default Image" class="img-fluid">
                            }
                            </div>
                            <div class="row justify-content-between">
                               <p class="post-category col-md-4">@item.CategoryName </p>
                                    <div class="col-md-6 text-secondary d-flex justify-content-between">
                                      <span> <i class="bi bi-chat"></i> @item.TotalComments </span>
                                        <span> <i class="bi bi-hand-thumbs-up"></i> @item.TotalUpvote </span>
                                      <span> <i class="bi bi-hand-thumbs-down"></i> @item.TotalDownvote </span>
                                </div>
                            </div>

                            <h2 class="title">
                                <a href="/blog-details?id=@item.Id">  @item.Title </a>
                            </h2>

                            <div class="d-flex align-items-center">
                            <img src="~/Uploads/@(item.ProfileUrl ==null ? "Images/defaultPic.jpg": item.ProfileUrl)" alt="" class="img-fluid post-author-img flex-shrink-0">
                                <div class="post-meta">
                                    <p class="post-author-list">  @item.UserName  </p>
                                    <p class="post-date">
                                        <time datetime="2022-01-01"> @item.PublishedDate</time>
                                    </p>
                                </div>
                            </div>

                        </article>

            </div><!-- End post list item -->
            }

        
            @if(Model != null)
            {
                @Html.PagedListPager(Model, page => Url.Action("", new { page }),
                         new PagedListRenderOptions
                {
                    DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
                    DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
                    DisplayLinkToPreviousPage = PagedListDisplayMode.IfNeeded,
                    DisplayLinkToNextPage = PagedListDisplayMode.IfNeeded,
                    UlElementClasses = new[] { "pagination", "custom-pagination-class" }, // Bootstrap pagination class
                    LiElementClasses = new[] { "page-item", "custom-page-item-class" }, // Bootstrap page item class
                    PageClasses = new[] { "page-link", "custom-page-link-class" } // Bootstrap page link class
                })

            }
        @* </div><!-- End blog pagination --> *@

    </div>
</section><!-- End Blog Section -->

<script type="text/javascript">
    document.addEventListener("DOMContentLoaded", function () {
        var sortBlogDropdown = document.querySelector(".sortblog");

        sortBlogDropdown.addEventListener("change", function () {
            var val = this.value;
            var selectedUrl = "/?page=1&sortOrder=" + val;
            window.location.href = selectedUrl;
        });

        var queryParams = new URLSearchParams(window.location.search);
        var sortOrder = queryParams.get('sortOrder');
        var sortSelect = document.querySelector('.sortblog');

        // Set the value of the select element to the sortOrder value
        if (sortSelect && sortOrder !== null) {
            sortSelect.value = sortOrder;
        }
    });

</script>
