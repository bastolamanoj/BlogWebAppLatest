@using BlogWebApp.ViewModel;
@model BlogVM;
@{
    Layout = "_AdminLayout";
    ViewData["Title"] = "Edit Blog";
}
<style>
  /*   .image-picker-div {
        display: none;
    } */
</style>

<section class="section">
    <div class="row justify-content-center">
        <div class="col-lg-8">

            <div class="card">
                <div class="card-body">
                    <h5 class="card-title"></h5>

                    <!-- Vertical Form -->
                    <form class="row g-3" action="/Blog/AddBlog" method="post">
                        <div class="col-12">
                            <label asp-for="Title" class="form-label label-title">Blog Title</label>
                            <input type="text" asp-for="Title" class="form-control blogtitle">
                            <label asp-for="Id" class="form-label d-none label-title">Blog Title</label>
                            <input type="text" asp-for="Id" class="form-control d-none blogid">
                        </div>
                        <div class="col-12">
                            <label asp-for="Body" class="form-label label-title">Blog Body</label>
                            @* <input type="text" class="form-control" id="inputNanme4"> *@
                            <div class="card mb-1">
                                <div class="card-body">
                                    @* <h5 class="card-title">Quill Editor Default</h5> *@

                                    <!-- Quill Editor Default -->
                                    <div asp-for="Body" class="quill-editor-default blogbody">
                                        @* @Model.BlogBody *@
                                        @Html.Raw(Model.Body)

                                    </div>
                                    <!-- End Quill Editor Default -->

                                </div>
                            </div>

                        </div>

                        <div class="col-12 d-flex">
                            <label asp-for="BlogCategoryId" class="form-label label-title">Category:</label>
                            @if (ViewBag.Categories != null)
                            {
                                <select asp-for="BlogCategoryId" asp-items="@ViewBag.Categories" class="form-control blogcategory"></select>
                            }
                            else
                            {
                                <span> No Categories Added</span>
                            }

                        </div>
                        <div class="col-12 d-flex">
                            <label for="inputNanme4" class="form-label me-4 label-title">Has Image ?</label>
                            <div class="form-check ms-3 form-switch has-image">
                                <input class="form-check-input has-image" type="checkbox" id="flexSwitchCheckDefault" @(Model.BlogImages.Count() > 0 ? "checked" : "")>
                            </div>
                        </div>

                        <div class="col-12 mt-1 image-picker-div" style="display: @(Model.BlogImages.Count()>0 ? "": "none")">
                            <label for="input-file" class="form-label">Pick File </label>
                            <input id="input-file" type="file" accept="image/*" name="input-file[]" multiple>
                        </div>
                        <div class="text-left">
                            <button type="button" class="btn btn-primary rounded-pill publishPost"> <i class="bi bi-collection"></i> Update </button>
                            @* <button type="reset" class="btn btn-secondary">Reset</button> *@
                        </div>
                    </form><!-- Vertical Form -->

                </div>
            </div>
        </div>
    </div>
</section>

<link href="~/toastr/css/toastr.css" rel="stylesheet" />

<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/5.2.8/js/fileinput.min.js"></script>

<script src="~/toastr/js/toastr.js"></script>

<script type="text/javascript">

    var blogImages = @Html.Raw(Json.Serialize(Model.BlogImages));

    $(document).ready(function () {

        $("#input-file").fileinput({
            showUpload: false,
            showRemove: false,
            maxFileCount: 3 // Limit the maximum number of files
        });

         var imageFiles="";
        var fileLinks = []; // Array to store file links

         blogImages.forEach(function(blogImage) {
            fileLinks.push({ ImageName: 'file name1', Url: blogImage.url });
           imageFiles += `<div class="file-preview-frame krajee-default  kv-preview-thumb" id="thumb-input-file-2003512_20231001_173647.jpg" data-fileindex="0" data-fileid="2003512_20231001_173647.jpg" data-template="image" data-zoom=""><div class="kv-file-content">
        <img src="/Uploads/${blogImage.url}" style="width: auto; height: auto; max-width: 100%; max-height: 100%; image-orientation: from-image;">
        </div><div class="file-thumbnail-footer">
            <div class="file-footer-caption" title="20231001_173647.jpg">                
            </div>
    
        <div class="file-upload-indicator" title="Not uploaded yet"><i class="bi-plus-lg text-warning"></i></div>
        <div class="file-actions">
            <div class="file-footer-buttons">
                   <button type="button" class="kv-file-zoom btn btn-sm btn-kv btn-default btn-outline-secondary" title="View Details"><i class="bi-zoom-in"></i></button>     </div>
        </div>

        <div class="clearfix"></div>
        </div>

          <div class="kv-zoom-cache"><div class="file-preview-frame krajee-default  kv-zoom-thumb" id="zoom-thumb-input-file-2003512_20231001_173647.jpg" data-fileindex="0" data-fileid="2003512_20231001_173647.jpg" data-template="image" data-zoom="{zoomData}"><div class="kv-file-content">
        <img src="~/Uploads/${blogImage.url}" style="width: auto; height: auto; max-width: 100%; max-height: 100%; image-orientation: from-image;">
        </div>
        </div>
        </div></div>`;

        });
        
        $(`.file-preview-thumbnails`).append(imageFiles);
        $("#input-file").fileinput({
                showUpload: false,
                showRemove: false,
                maxFileCount: 3 // Limit the maximum number of files
            });


        $('.has-image.form-switch').click(function () {
            // Check if the toggle switch is checked
            if ($(".has-image").is(':checked')) {
                // If checked, show the div element
                $('.image-picker-div').show();
            } else {
                // If not checked, hide the div element
                $('.image-picker-div').hide();
            }
        });

        // $('#input-file').change(function () {
        //     console.log("sjkfjs");
        // });

        $(".publishPost").click(async function () {

            var files = $('#input-file')[0].files;
            // if (files.length === 0) {
            //     toastr.warning("Add Image for Blog");
            //     return;
            // }

            for (var i = 0; i < files.length; i++) {

                var file = files[i];
                if (file.size > 3 * 1024 * 1024) {
                    // alert('File size exceeds 3MB limit');
                    toastr.warning("File size exceeds 3MB limit");
                    continue; // Move to the next file
                }
               
                var formData = new FormData();
                formData.append('file', file);
                debugger;
                await $.ajax({
                    url: '/File/UploadFile',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        console.log(response);
                        if (response.length < 100) {
                            fileLinks.push({ ImageName: file.name, Url: response });
                        
                        }

                    },// Assuming fileLink is the key for the link in the response

                    error: function (xhr, status, error) {
                        console.error('Error uploading file:', error);
                    }
                });
            }
            var model = {
                Id: $(`.blogid`).val(),
                Title: $(`.blogtitle`).val(),
                Body: $(`.ql-editor`).html(),
                BlogCategoryId: parseInt($(`.blogcategory`).val()),
                BlogImages: fileLinks
            }
            var category = $(`.blogcategory`).text();
         
            await $.ajax({
                url: '/Blog/UpdateBlog',
                type: 'POST',
                data: model,

                success: function (response) {
                    toastr.success('Blog updated Successfully');
                    SaveBlogLogFile(model, category);
                    window.location.href = "/manageblog"
                },
                error: function (xhr, status, error) {
                    // Handle error
                    console.log(error);
                }
            });
        });

        async function SaveBlogLogFile(modeldata, category) {
            var model = {
                Title: modeldata.Title,
                Body: modeldata.Body,
                CategoryName: category,
                Action: "Blog Updated"
            }
            // SaveBlogFile
            await $.ajax({
                url: '/File/SaveBlogFile',
                type: 'POST',
                data: model,
                success: function (response) {
                    console.log("log Saved");
                },
                error: function (xhr, status, error) {
                    console.log("Error to Save log");
                }
            });
        }
    });

</script>


